name: build and deploy
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  id-token: write
  contents: read 
env: 
  AWS_REGION: "us-east-1"

jobs:
  build: 
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: pnpm setup
        uses: pnpm/action-setup@v4
      - name: node setup
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache:             pnpm
      - name: install
        run:  pnpm install
      - name: test
        run: ls /home/runner/work/portfolio-v2-ui/portfolio-v2-ui/src
    #   - name: types
    #     run:  pnpm run types
    #   - name: lint
    #     run:  pnpm run lint
      - name: build
        run:  pnpm run build
      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
            name: dist
            path: dist/
  terraform-plan:
    needs: build
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.9.3 
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: portfolio-deploy
          aws-region: ${{ env.AWS_REGION }}
      - name: terraform plan
        run: |
          cd terraform
          terraform init
          terraform plan -out tfplan
  terraform-apply:
    if: github.event_name == 'push' && false 
    needs: terraform-plan
    runs-on: ubuntu-latest
    container: hashicorp/terraform:1.9.3 
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_NUMBER }}:role/${{ secrets.AWS_DEPLOY_ROLE }}
          role-session-name: portfolio-deploy
          aws-region: ${{ env.AWS_REGION }}
      - name: terraform plan
        run: |
          cd terraform
          terraform init
          terraform plan -out tfplan
      - name: terraform apply
        run: |
          cd terraform
          terraform init
          terraform apply tfplan